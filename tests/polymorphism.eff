let a = (let f x = x in (f 5, f "foo")) ;;

check a ;;

let g x y = (fun x y -> x) x y ;;

check (g 4 "foo", g "foo" 4) ;;

let u = [] ;;

check (1 :: u, "foo" :: u) ;;

let v = [[]] ;;

check ([] :: v, [2] :: v) ;;

#type (fun x -> let h t u = u in h x x) ;;

#type (fun x -> let h t u = t in h x x) ;;

let rec u x = u x ;;
#type u ;;