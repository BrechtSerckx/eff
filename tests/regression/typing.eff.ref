- : int | 
- : bool | 
- : string | 
- : unit | 
- : float | 
- : int × int | 
- : τ₁ list × string | 
- : (string, τ₁) cow | 
- : (τ₁, string) cow | 
- : (int, string list) cow ⟶  (string list, int) cow | 
- : (int, string) bull | 
- : (int, τ₁) bull ⟶  int | 
- : (τ₁, τ₂ list list) bull ⟶  τ₂ list list | 
- : string -{Bark:ρ₁}→ string | ρ₁ = ⊤
- : string ! {Bark:ρ₁} | ρ₁ = ⊤
- : int ! {Wag:ρ₁, Bark:ρ₂} | ρ₁ = ⊤
- : τ₁ ⟶  τ₂ ! {Wag:ρ₁, Bark:ρ₂} | τ₁ < τ₂; 
- : _τ₁ ⟶  _τ₂ ! {Wag:ρ₁, Bark:ρ₂} | τ₁ < τ₂; 
- : τ₁ ⟶  τ₂ × τ₃ ! {Wag:ρ₁, Bark:ρ₂} | τ₁ < τ₃,
τ₁ < τ₂; 
- : (τ₁ ⟶  τ₂) × τ₃ list ! {Wag:ρ₁, 
Bark:ρ₂} | τ₁ < τ₂; 
- : (_τ₁ ⟶  _τ₂) × (_τ₃ ⟶  _τ₄) ! {Wag:ρ₁, 
Bark:ρ₂} | τ₃ < τ₄,τ₁ < τ₂; 
- : τ₁ ⟶  τ₂ ⟶  τ₃ ! {Wag:ρ₁, Bark:ρ₂} | τ₁ < τ₃; 
- : τ₁ list list list ! {Wag:ρ₁, Bark:ρ₂} | 
- : τ₁ ⟶  τ₂ ⟶  τ₃ ! {Wag:ρ₁, Bark:ρ₂} | τ₁ < τ₃; 
val _h_279 : τ₁ ⟶  τ₂ | τ₁ < τ₂;  = <fun>
- : τ₁ ⟶  τ₂ ! {Wag:ρ₁, Bark:ρ₂} | τ₁ < τ₂; 
