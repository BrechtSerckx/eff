val state : τ₁ ⟶  (τ₂ ! {Get:ρ₂, Set:ρ₃|δ₂} ⟹ 
            (int -{Get:ρ₅, Set:ρ₆|δ₃}→ τ₃) ! {Get:ρ₈, 
            Set:ρ₉|δ₄}) | τ₂ < τ₃; δ₂ < δ₄,
δ₂ < δ₃; ρ₄ = ⊤,ρ₇ = ⊤ = <fun>
val better_state : int ⟶  (τ₁ ! {Get:ρ₂, Set:ρ₃|δ₂} ⟹ 
                   τ₂ ! {Get:ρ₅, Set:ρ₆|δ₃}) | τ₁ < τ₂; δ₂ < δ₃; ρ₄ = ⊤ = <fun>
val transaction : τ₁ ! {Get:ρ₂, Set:ρ₃|δ₁} ⟹ 
τ₂ ! {Get:ρ₅, 
Set:ρ₆|δ₂} | τ₁ < τ₂; δ₁ < δ₂; ρ₄ = ⊤,ρ₅ = ⊤,
ρ₆ = ⊤ = <handler>
Check (file "./state.eff", line 25, char 24 - line 25, char 31):
20
Check (file "./state.eff", line 28, char 26 - line 28, char 33):
30
Check (file "./state.eff", line 34, char 37 - line 34, char 44):
20
- : int ! {Fail:ρ₁, Get:ρ₃, Set:ρ₄} | ρ₂ = ⊤ = 0
