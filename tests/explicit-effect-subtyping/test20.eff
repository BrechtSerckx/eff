type nat = Zero | Succ of nat

;;

type r_type = {res: int; val: nat; zero: bool} 

;; 

type a_type = {sn: int; fs: nat}

;;

let tester {res = res; val = vl} = function 
| {fs=Zero; sn = 0} -> {res = 0; val = vl; zero = true} 
| {fs=Succ n; sn= 0} -> {val = n; res = res; zero = false} 
| {sn= n; fs = _} -> {zero= true; val = Zero; res = n}
in

tester 
