let rec loop n = if n = 0
                   then 0
                   else loop (n - 1)
in loop 10
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
let rec loop n = case n = 0 of
                   True  -> 0
                   False -> loop (n - 1)
in loop 10
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
let rec loop n = case ((=) n) 0 of
                   True  -> 0
                   False -> loop (((-) n) 1)
in loop 10
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tcVar: Added 0 constraints:
---------------------
tcVar: Added 0 constraints:
-------------------------------------------------------------------------------
tcApply ((=) x): Added 2 constraints:
τ₅₄₄ : s₃
τco₁: (τ₄ -{}→ τ₄ -{}→ bool =< τ₅₄₂ -δ₂→ τ₅₄₄)
-------------------------------------------------------------------------------
tcVar: Added 0 constraints:
-------------------------------------------------------------------------------
tcApply (((=) x) 0): Added 2 constraints:
τ₅₄₅ : s₄
τco₂: (τ₅₄₄ =< int -δ₃→ τ₅₄₅)
-------------------------------------------------------------------------------
tcLetCmp: Added 2 constraints:
δco₁: (δ₂ =< δ₄)
δco₂: (δ₃ =< δ₄)
-------------------------------------------------------------------------------
tcVar: Added 0 constraints:
---------------------
tcVar: Added 0 constraints:
---------------------
tcVar: Added 0 constraints:
-------------------------------------------------------------------------------
tcApply ((-) x): Added 2 constraints:
τ₅₄₇ : s₆
τco₃: (int -{}→ int -{}→ int =< τ₅₄₂ -δ₆→ τ₅₄₇)
-------------------------------------------------------------------------------
tcVar: Added 0 constraints:
-------------------------------------------------------------------------------
tcApply (((-) x) 1): Added 2 constraints:
τ₅₄₈ : s₇
τco₄: (τ₅₄₇ =< int -δ₇→ τ₅₄₈)
---------------------
tcLetCmp: Added 2 constraints:
δco₃: (δ₆ =< δ₈)
δco₄: (δ₇ =< δ₈)
-------------------------------------------------------------------------------
tcVar: Added 0 constraints:
---------------------
tcVar: Added 0 constraints:
-------------------------------------------------------------------------------
tcApply (f (((-) x) 1)): Added 2 constraints:
τ₅₄₉ : s₈
τco₅: (τ₅₄₂ -δ₁→ τ₅₄₃ =< τ₅₄₇ -δ₉→ τ₅₄₉)
-------------------------------------------------------------------------------
tcLetCmp: Added 2 constraints:
δco₅: (δ₈ =< δ₁₀)
δco₆: (δ₉ =< δ₁₀)
-------------------------------------------------------------------------------
tcIfThenElse: Added 6 constraints:
τ₅₄₆ : s₅			((τ₅₄₆!δ₅) assumed result type of ifthenelse)

τco₆: (int =< τ₅₄₆)		(type of 0 must be a subtype of τ₅₄₆)
δco₇: ({} =< δ₅)		(type of 0 must be a subtype of τ₅₄₆)

τco₇: (τ₅₄₇ =< τ₅₄₆)		(type of (f (x-1)) must be a subtype of τ₅₄₆)
δco₈: (δ₁₀ =< δ₅)		(type of (f (x-1)) must be a subtype of τ₅₄₆)

τco₈: (τ₅₄₄ =< bool)		(type of (x=0) must be a subtype of bool (ifthenelse)
-------------------------------------------------------------------------------
tcLetCmp: Added 2 constraints:
δco₉: (δ₄ =< δ₁₁)
δco₁₀: (δ₅ =< δ₁₁)
-------------------------------------------------------------------------------
tcLetRec: Calling unify with (28):
δco₁₁: (δ₁₁ =< δ₁)
τco₉: (τ₅₄₄ =< τ₅₄₃)
δco₁₀: (δ₅ =< δ₁₁)
δco₉: (δ₄ =< δ₁₁)
τco₈: (τ₅₄₄ =< bool)
δco₈: (δ₁₀ =< δ₅)
τco₇: (τ₅₄₇ =< τ₅₄₆)
δco₇: ({} =< δ₅)
τco₆: (int =< τ₅₄₆)
τ₅₄₆ : s₅
δco₆: (δ₉ =< δ₁₀)
δco₅: (δ₈ =< δ₁₀)
τco₅: (τ₅₄₂ -δ₁→ τ₅₄₃ =< τ₅₄₇ -δ₉→ τ₅₄₉)
τ₅₄₉ : s₈
δco₄: (δ₇ =< δ₈)
δco₃: (δ₆ =< δ₈)
τco₄: (τ₅₄₇ =< int -δ₇→ τ₅₄₈)
τ₅₄₈ : s₇
τco₃: (int -{}→ int -{}→ int =< τ₅₄₂ -δ₆→ τ₅₄₇)
τ₅₄₇ : s₆
δco₂: (δ₃ =< δ₄)
δco₁: (δ₂ =< δ₄)
τco₂: (τ₅₄₄ =< int -δ₃→ τ₅₄₅)
τ₅₄₅ : s₄
τco₁: (τ₄ -{}→ τ₄ -{}→ bool =< τ₅₄₂ -δ₂→ τ₅₄₄)
τ₅₄₄ : s₃
τ₅₄₃ : s₂
τ₅₄₂ : s₁
-------------------------------------------------------------------------------
skel_eq_step failure: (prim_skel int ~ prim_skel int -sk-> s₇)
Fatal error: exception Failure("File \"src/effect-system/unification.ml\", line 186, characters 20-27")
