type (_,_) effect +=
  | Effect_Decide: (unit,bool) effect
let _choose_all_279 =
  {
    value_clause = (fun _x_285  -> value [_x_285]);
    finally_clause = (fun _gen_id_par_284  -> value _gen_id_par_284);
    effect_clauses = fun (type a) -> fun (type b) ->
      fun (x : (a,b) effect)  ->
        (match x with
         | Effect_Decide  ->
             (fun (() : unit)  ->
                fun (_k_280 : bool -> _ computation)  ->
                  (_k_280 true) >>
                    (fun _gen_bind_282  ->
                       (_var_187 _gen_bind_282) >>
                         (fun _gen_bind_281  ->
                            (_k_280 false) >>
                              (fun _gen_bind_283  ->
                                 _gen_bind_281 _gen_bind_283))))
         | eff' -> (fun arg  -> fun k  -> Call (eff', arg, k)) : a ->
                                                                   (b ->
                                                                    _
                                                                    computation)
                                                                    ->
                                                                    _
                                                                    computation)
  }
let _ = (_var_187 [10]) >> (fun _gen_bind_103  -> _gen_bind_103 [20])
