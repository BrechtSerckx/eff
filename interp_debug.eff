external ( / ) : int -> int -> int = "/"
external ( ~- ) : int -> int = "~-"

(***********************************
******* The Building Blocks ********
***********************************)

(********************************
* Types
********************************)

type num = int;;
type func = int -> int;;
type loc = int;;
type name = string;;
type env = (string * int) list;;

type term =
    | Num of int
    | Div of (term * term)

;;


effect Arith_DivByZero : unit -> int;;


(*HANDLER GETS REMOVED IF THE CODE BELOW IS USED *)

 let rec interp a =
    begin match a with
    | Num b -> b
    | Div (l, r) ->
        let r_num = (interp r) in
        begin match r_num with
        | 0 -> #Arith_DivByZero ()
        | _ -> let l_num = (interp l) in r_num / l_num
        end 

    end
;; 


let arithmeticHandler = handler
    | #Arith_DivByZero () k ->  -1 (* (absurd (#DivisionByZero ())) *)

;;

let test_handler_removed = with arithmeticHandler handle (
    interp (Div(Num 2, Num 1)))
